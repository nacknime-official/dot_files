" set leader key
let mapleader = " "
set timeout timeoutlen=500

" Plugins "{{{
set surround
set commentary
set argtextobj
set NERDTree
set ideajoin
set commentary
"}}}
" Maps "{{{
map <A-h> <Action>(PreviousTab)
map <A-l> <Action>(NextTab)
map <C-h> :action PrevSplitter<cr>
map <C-l> :action NextSplitter<cr>
map <Leader>c :action CloseEditor<cr>
map <Leader>rn :action RenameElement<cr>
map K <Action>(QuickJavaDoc)
" map K :action ShowErrorDescription<cr>
map gr :action FindUsages<cr>
map gI :action GotoImplementation<cr>
map gh :action ShowErrorDescription<cr>
map <Leader>e :NERDTree<cr>
map <Leader>/ gcc

" nmap <A-j> <Action>(MoveStatementDown)
" nmap <A-k> <Action>(MoveStatementUp)
" imap <A-j> <Action>(MoveStatementDown)
" imap <A-k> <Action>(MoveStatementUp)
" vmap <A-j> <Action>(MoveStatementDown)
" vmap <A-k> <Action>(MoveStatementUp)
nmap <A-j> :m .+1<CR>==
nmap <A-k> :m .-2<CR>==
imap <A-j> <Esc>:m .+1<CR>==gi
imap <A-k> <Esc>:m .-2<CR>==gi
vmap <A-j> :m '>+1<CR>gvgv
vmap <A-k> :m '<-2<CR>gvgv

map <Leader>w :w<CR>
vmap < <gv
vmap > >gv

imap kj <Esc>
imap jk <Esc>
imap jj <Esc>

map <Leader>rt :action RunClass<cr>
map <Leader>q :action HideActiveWindow<cr>
map <Leader>n :action CloseAllNotifications<cr>

map <Leader>dd :action DebugClass<cr>
map <Leader>db :action ToggleLineBreakpoint<cr>
map <Leader>dn :action StepOver<cr>
map <Leader>di :action StepInto<cr>
map <Leader>do :action StepOut<cr>
"}}}

" vim: set foldmethod=marker foldlevel=0:
